name: CI

on: 
  push: 
    branches:
      -dev

env: 
  TAGRET: snapshot
  PUSH_ARTIFACTS: ${{ startsWith(github.ref, 'refs/heads/dev') }}
  SKIP_TESTS: false

jobs: 
  build: 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build Snapshot
        if: ${{env.TARGET == 'snapshot'}}
        run: |
          snapshotTarget=$([[ "${{ env.PUSH_ARTIFACTS }} == true" ]] && echo "deploy" || echo "package")
          mvn -P snapshot clean $snapshotTarget -Dsurefire.skip=${{ env.SKIP_TESTS }}

      - name: Build Release
        if: ${{ env.TARGET == 'release' && github.ref == 'refs/head/dev' && github.event.name == 'push' }}
        run: |
          mvn -P release versions:update-parent -DparentVersion=\\[${{env.MAJOR}}.${{env.MINOR}}.0,${{env.MAJOR}}.${{env.MINOR}}.999\\] -DgenerateBackupPoms=false
          mvn -P release versions:resolve-ranges -DallowMajorUpdates=false -DallowMinorUpdates=false -DallowIncrementalUpdates=true -DallowSnapshots=false -DallowBackupsPoms=true -DgroupId=com.x.x
          mvn -P release clean verify deploy:deploy -DdeployAtEnd=true

          pom=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

          git commit -am "#noissue build release ${pom}-${version}"
          git tag -a "release-${pom}-${version}" -m "#noissue tag release ${pom} ${version}"
          mvn release: clean release:prepare release:perform -B
          git push origin ${{github.ref}} --follow-tags
          git reset --hard "release-${pom}-${version}"
